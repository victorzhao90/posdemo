import { TestBed } from '@angular/core/testing';
import { Router } from '@angular/router';
import { Location } from '@angular/common';
import { BrowserBackGuard } from './back.guard';
import { NavigatorService } from 'td-ea-ts-ui-shared';
import { RESTRICTED_BACK_PAGE_ROUTES } from '../app.const';

describe('BrowserBackGuard', () => {
  let guard: BrowserBackGuard;
  let routerSpy: jasmine.SpyObj<Router>;
  let locationSpy: jasmine.SpyObj<Location>;
  let navServiceSpy: jasmine.SpyObj<NavigatorService>;

  beforeEach(() => {
    routerSpy = jasmine.createSpyObj('Router', ['navigate']);
    locationSpy = jasmine.createSpyObj('Location', ['path']);
    navServiceSpy = jasmine.createSpyObj('NavigatorService', ['']);

    TestBed.configureTestingModule({
      providers: [
        BrowserBackGuard,
        { provide: Router, useValue: routerSpy },
        { provide: Location, useValue: locationSpy },
        { provide: NavigatorService, useValue: navServiceSpy }
      ]
    });

    guard = TestBed.inject(BrowserBackGuard);
  });

  it('should be created', () => {
    expect(guard).toBeTruthy();
  });

  it('should allow navigation if route is not restricted', () => {
    routerSpy.url = '/home'; // 模拟当前 URL
    expect(guard.canDeactivate({ url: '/home' } as any)).toBeTrue();
  });

  it('should block navigation if route is restricted', () => {
    routerSpy.url = RESTRICTED_BACK_PAGE_ROUTES[0]; // 选一个受限路由
    expect(guard.canDeactivate({ url: RESTRICTED_BACK_PAGE_ROUTES[0] } as any)).toBeFalse();
  });
});
